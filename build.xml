<!--
	
-->

<project name="CinnamonTools">
    <description>
        Build file for the Cinnamon Tools
    </description>

    <!-- properties -->

    <property environment="env"/>
    <!-- the build properties file expects you to set the following environment vars:
        1. CINNAMON2_SOURCE: the path to the parent directory which contains the source directories of the modules. 
        2. JAVA_LIB_HOME: the path to the directory which contains all required java libraries
        3. GRAILS_HOME: the path to your Grails install, at least version 2.1.1 is required.
    -->
    <property file="../cinnamon2-server/cinnamon.build.properties"/>
    
    <property name="tools.home" value="${workspace.home}/cinnamon2-tools"/>
    <property name="tools.src" value="${tools.home}/src"/>
    <property name="tools.build" value="${tools.home}/build"/>
    <property name="tools.build.classes" value="${tools.build}/classes"/>
    <property name="docs.home" value="${tools.home}/docs"/>
    <property name="tools.target" value="${tools.home}/target"/>
    <property name="tools.jar" value="${tools.target}/cinnamonTools.jar"/>
    <property name="converter.jar" value="${tools.target}/contentRelationConverter.jar"/>


    <property name="compile.debug" value="true"/>
    <path id="compile.classpath">
        <!-- <pathelement location="${lib.commons.cli}"/> -->
        <pathelement location="${lib.testng}"/>
        <pathelement location="${lib.groovy}"/>
        <pathelement location="${lib.slf4j.api}"/>
        <fileset dir="${lib.logback}" includes="logback-c*.jar" excludes="*sources.jar"/>
        <pathelement location="${lib.dom4j}"/>
        <pathelement location="${lib.safran}"/>
        <pathelement location="${lib.entitylib}"/>
        <pathelement location="${lib.cinnamonBase}"/>
        <pathelement location="${lib.utils}"/>
        <pathelement location="${lib.testng}"/>
        <pathelement location="${hibernate.home}/hibernate3.jar"/>
        <fileset dir="${hibernate.lib.required}" includes="*.jar" excludes="dom4j* slf4j*"/>
        <pathelement location="${hibernate.lib.jpa}"/>
        <pathelement location="${lib.servlet_api}"/>
        <pathelement location="${lib.commons.httpclient}"/>
        <pathelement location="${lib.xmlunit}"/>
        <pathelement location="${lib.lucene}"/>
        <pathelement location="${lib.lucene.xmlquery}"/>
        <pathelement location="${lib.lucene.regex}"/>
        <pathelement location="${lib.commons.io}"/>
        <pathelement location="${lib.xhtmlrenderer}"/>
        <pathelement location="${lib.xhtmlrenderer.itext}"/>
        <pathelement location="${lib.javamail}"/>
        <pathelement location="${lib.velocity}"/>
        <pathelement location="${lib.tika}"/>
        <pathelement location="${tools.home}/lib/cinnamon_full.jar"/>
    </path>


    <!-- =================================
    target: all
   ================================= -->
    <target name="all" depends="compile" description="Clean build and dist directories, then compile"/>

    <!-- =================================
    target: clean
   ================================= -->
    <target name="clean" description="Delete old build and dist directories">
        <delete dir="${tools.build}"/>
        <delete dir="${tools.target}"/>
    </target>


    <target name="prepare.rs" depends="clean" description="prepare for compilation of the rs lib">

        <mkdir dir="${tools.build}"/>
        <mkdir dir="${tools.target}"/>
        <mkdir dir="${tools.build.classes}"/>
        <mkdir dir="${tools.build}/lib"/>


        <copy todir="${tools.build}/lib" file="${lib.cinnamonBase}"/>
        <copy todir="${tools.build}/lib" file="${lib.entitylib}"/>
        <copy todir="${tools.build}/lib" file="${lib.utils}"/>
        <!--<copy todir="${tools.build}/lib" file="${hibernate.annotations.lib}/ejb3-persistence.jar"/>-->
        <copy todir="${tools.build}/lib" file="${lib.groovy}"/>
        <copy todir="${tools.build}/lib" file="${lib.slf4j.api}"/>
        <copy todir="${tools.build}/lib" file="${lib.logback.core}"/>
        <copy todir="${tools.build}/lib" file="${lib.logback.classic}"/>
        <copy todir="${tools.build}/lib" file="${lib.jsch}"/>
        <copy todir="${tools.build}/lib" file="${lib.ant}"/>
        <copy todir="${tools.build}/lib" file="${lib.ant.jsch}"/>
        <copy todir="${tools.build}/lib" file="${lib.ant.launcher}"/>

        <copy todir="${tools.build}/lib" file="${lib.commons.fileupload}"/>
        <copy todir="${tools.build}/lib" file="${lib.commons.io}"/>
        <copy todir="${tools.build}/lib" file="${lib.commons.httpclient}"/>
        <copy todir="${tools.build}/lib" file="${lib.commons.collections}"/>
        <copy todir="${tools.build}/lib" file="${lib.commons.codec}"/>
        <copy todir="${tools.build}/lib" file="${lib.commons.logging}"/>
        <!-- needed by httpclient -->
        <copy todir="${tools.build}/lib" file="${lib.jaxen}"/>
        <!-- needed by dom4j -->
        <copy todir="${tools.build}/lib" file="${lib.dom4j}"/>
        <copy todir="${tools.build}/lib" file="${lib.jtds}"/>
        <copy todir="${tools.build}/lib" file="${lib.postgres}"/>
        <copy todir="${tools.build}/lib" file="${lib.lucene}"/>
        <copy todir="${tools.build}/lib" file="${lib.lucene.xmlquery}"/>
        <copy todir="${tools.build}/lib" file="${lib.lucene.regex}"/>

        <copy todir="${tools.build}/lib" file="${hibernate.home}/hibernate3.jar"/>
        <copy todir="${tools.build}/lib" file="${hibernate.lib.jpa}"/>
        <copy todir="${tools.build}/lib" file="${tools.home}/lib/cinnamon_full.jar"/>
        <copy todir="${tools.build}/lib" file="${lib.c3p0}"/>
        <copy todir="${tools.build}/lib">
            <fileset dir="${hibernate.lib.required}"
                     includes="*.jar"
                     excludes="commons-collections*.jar slf4j* dom4j*"
                    />
        </copy>
    </target>


    <taskdef name="groovyc"
             classname="org.codehaus.groovy.ant.Groovyc"
             classpathref="compile.classpath"/>


    <!-- - - - - - - - - - - - - - - - - -
target: compile.rs
- - - - - - - - - - - - - - - - - -->
    <target name="compile" depends="prepare.rs" description="compile the tools and build a .jar">
        <groovyc srcdir="${tools.src}"
                 destdir="${tools.build.classes}">
            <classpath>
                <path refid="compile.classpath"/>
            </classpath>
            <javac classpathref="compile.classpath"/>
        </groovyc>

        <mkdir dir="${tools.build.classes}/META-INF"/>

    </target>

    <target name="makeJar" depends="compile" description="create a jar for distribution">
        <jar destfile="${tools.jar}" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.transfer.CopyRepository"/>
            </manifest>
        </jar>
    </target>

    <target name="makeFullConverterJar" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${converter.jar}" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.converter.ContentRelationConverter"/>
            </manifest>
        </jar>
    </target>

    <target name="makeContentSizeFixerJar" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${tools.target}/contentSizeFixer.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.converter.ContentSizeFixer"/>
            </manifest>
        </jar>
    </target>

    <target name="makeOrphanFinderJar" depends="compile" description="create a jar for distribution">
        <jar destfile="${tools.target}/orphanFinder.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.repository.OrphanFinder"/>
            </manifest>
        </jar>
    </target>

    <target name="makeRepositoryCleanerJar" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${tools.target}/repositoryCleaner.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.repository.RepositoryCleaner"/>
            </manifest>
        </jar>
    </target>

    <target name="makeBomWriterJar" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${tools.target}/bomWriter.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.converter.BOMWriter"/>
            </manifest>
        </jar>
    </target>

    <target name="makeBomFixerJar" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${tools.target}/bomFixer.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.converter.BOMWriterAndEncodingFixer"/>
            </manifest>
        </jar>
    </target>
    <target name="metaConverterJar" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${tools.target}/metaConverter.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.converter.MetaConverter"/>
            </manifest>
        </jar>
    </target>

    <target name="makeTikaUpdater" depends="compile" description="create a jar for distribution">
        <copy todir="${tools.target}" file="config/converter/config.properties"/>
        <jar destfile="${tools.target}/tikaUpdater.jar" basedir="${tools.build.classes}">
            <zipgroupfileset dir="${tools.build}/lib/">
                <include name="**/*.jar"/>
                  <exclude name="**/slf4j-api.jar"/>
            </zipgroupfileset>
            <include name="**/*.class"/>
            <include name="**/META-INF/*.xml"/>
            <include name="**/testng.xml"/>
            <include name="**/*.properties"/>

            <manifest>
                <attribute name="Main-Class" value="net.sourceforge.cinnamon.tool.converter.TikaUpdater"/>
            </manifest>
        </jar>
    </target>

</project>